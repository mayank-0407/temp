%simplex
c=[2 5 0 0 0 0]; % 0 in last to avoid error in zjcj 
b=[24;21;9]; 
a=[1 4 1 0 0;3 1 0 1 0;1 1 0 0 1]; 
bv=[3 4 5]; A=[a b]; 
zj_cj=c(bv)*A-c; 
simplex_table=[A;zj_cj]
var={'x1','x2','s1','s2','s3','sol'}; 
array2table(simplex_table,'VariableNames',var) RUN=true while(RUN) 
zc=zj_cj(1:end-1); if any(zc<0)
fprintf('The current BFS is not optimal') 
[enter_var,piv_col]=min(zc); 
pivot_col=A(:,piv_col); 
sol=A(:,end); 
if all(pivot_col<=0) 
error('Unbounded Solution'); 
else for i=1:size(A,1) 
if(pivot_col(i)>0) 
ratio(i)=sol(i)/pivot_col(i); 
else ratio(i)=inf; end end 
[leaving_var,pivot_row_index]=min(ratio); 
pivot_row=A(pivot_row_index,:); end 
bv(pivot_row_index)=piv_col; %% changing bv next
pvt_element=A(pivot_row_index,piv_col) 
A(pivot_row_index,:)=A(pivot_row_index,:)/pvt_element 
for i=1:size(A,1) 
if i~=pivot_row_index 
A(i,:)=A(i,:)-A(i,piv_col)*A(pivot_row_index,:) % new_value=old_value-corrpivotcolval*corrpivotrowval/pivotable
end end zj_cj=c(bv)*A-c; 
next_table=[A;zj_cj]; 
array2table(simplex_table,'VariableNames',var) 
else RUN=false 
fprintf('The table is optimal') end end

%lcs
c=[2 10 4 5;6 12 8 11;3 9 5 7];
a=[12 25 20];
b=[25 10 15 5];
m=size(c,1);
n=size(c,2);
if sum(b)==sum(a)
fprintf('balanced')else
fprintf('Not balanced')
if sum(a)<sum(b)
c(end+1,:)=zeros(1,n);
a(end+1)=sum(b)-sum(a);
m=m+1;else
c(:,end+1)=zeros(1,m);
b(end+1)=sum(a)-sum(b);
n=n+1; end end X=zeros(m,n);
orig_c=c; for i=1:m for j=1:n
cpq=min(min(c)); 
if cpq==inf break end
[p1,q1]=find(cpq==c);
p=p1(1); q=q1(1);
X(p,q)=min(a(p),b(q));
if min(a(p),b(q))==a(p)
b(q)=b(q)-a(p); a(p)=a(p)-X(p,q);
c(p,:)=inf; else
a(p)=a(p)-b(q);
b(q)=b(q)-X(p,q);
c(:,q)=inf end end end SUM=0; X
for i=1:m for j=1:n
SUM=SUM+(X(i,j)*orig_c(i,j)); end end
